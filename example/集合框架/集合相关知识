集合只能存放引用数据类型（类对象），当存放基本数据类型时，会自动为其装箱（拆箱）
集合的长度是可变长度的.
	

一个集合类型对象中可以存储任意类型的数据类型。可以同时存放多种不同的数据类型，因为当没有使用泛型时，存放时的类型是Object类型。
当指定了泛型时，就只能存放指定泛型的数据了


每一个Collection的子类都重写了ToString()方法


集合对象的Contains()的底层实现是通过使用指定的对象与集合中的数据使用equals()方法进行比较的，所以当集合中存放的数据类型没有重写equals()方法，就无法使用此方法来判断集合中是否存在某个元素
当我们需要在一个集合中存放的是我们自定义的对象时，我们可以重写我们的自定义类中的equals方法，可以实现我们根据自定义类的某个对象的某个或多个属性来判断集合中是否存在某个元素

isEmpty()可以判断一个集合中的元素是否为空

retainAll()方法可以对两个集合对象中的元素取交集(元素必须重写equals方法，因为里面也是通过这个方法来判断是否相同)

迭代器(iterator)
	迭代器是集合框架中的一个工具，通过它可以实现取出集合中的数据，里面有一个游标来指向集合中的元素，当遍历时，会根据需要移动游标，指向指定的元素，然后通过此类中方法来取得当前位置的元素
	hasNext()：(一个默认初始化的迭代器默认指向的位置为-1，这个方法其实就是判断当前游标的值是否等于集合的元素的个数)判断下一个指针位置是否指向数据（也就是判断当前指向的元素的下一个位置有没有元素）
	next():得到的是当前指针后面的一个元素，同时给游标值加1。由于指针默认指向的是-1，所以第一次使用时，指向的是第一个元素
	当我们在使用迭代器的期间，不能对集合中的元素进行删除添加（不包括修改）操作，这样会抛出异常，原因是在每次调用next()方法时，会先对获取迭代器时的元素数量和操作时集合当前的元素数量进行比较（校验checkForComodification()）
	当校验结束后，会复制一份当前集合的元素，对集合元素进行取出，所以，修改后的集合，取出的元素也是修改后的元素。






