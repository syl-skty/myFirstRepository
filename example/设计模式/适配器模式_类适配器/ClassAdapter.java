package 适配器模式_类适配器;

/**
 * 这是适配器类，实现适配器的功能（类适配器）
 * 
 * 通过这个适配器类，让我们实现了间接实现接口的方式。
 * 
 * 由于在某些情况下，我们希望一个类实现某个接口，但这个类不是我们写的，无法修改这个类，因此我们使用适配器去适配，
 * 
 * 通过让适配器类去实现这个接口，同时继承我们的类，这样我们的适配器中就必须实现接口中方法的规范。同时也拥有了我们指定类的方法
 * 
 * 最后在重写的接口的方法中调用我们指定类的指定的方法。这样就实现间接实现接口的效果了
 * 
 * 我们要从电脑给手机充电 （电脑usb接口--》适配源，手机电源接口--》适配器适配对象，手机数据线--》适配器对象）
 * 
 * 这里相当于数据线
 * 
 * @author skty
 *
 */
public class ClassAdapter extends Source implements Target {

	@Override
	public void doWork() {
		// 再在适配器实现接口的规范中调用我们适配源类中的对应方法，实现间接实现接口
		doSourceWork();
	}
	// 当源方法中存在某个方法名与接口方法名相同时，就会自动认定为重写了，不用自己重写方法
}
